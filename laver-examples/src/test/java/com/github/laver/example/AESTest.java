package com.github.laver.example;

import org.apache.commons.codec.binary.Base64;

import javax.crypto.*;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;

/**
 * Created by say on 8/2/16.
 */
public class AESTest {
    public static void main(String[] args) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException {
        String m = "eyJkYXRhIjp7ImV4Y2VwdGlvbiI6ImphdmEubGFuZy5OdWxsUG9pbnRlckV4Y2VwdGlvbiIsImV4Y2VwdGlvblR5cGUiOiJjbGFzcyBqYXZhLmxhbmcuTnVsbFBvaW50ZXJFeGNlcHRpb24iLCJlcnJvclJlcXVlc3RVcmkiOiIvdiIsInNlcnZsZXRQYXRoIjoiL3YiLCJmb3J3YXJkUmVxdWVzdFVyaSI6Ii92IiwiY29udGV4dFBhdGgiOiIiLCJzZXJ2bGV0TmFtZSI6InZhbHVlIiwiZXhjZXB0aW9uSW5mbyI6ImphdmEubGFuZy5OdWxsUG9pbnRlckV4Y2VwdGlvblxuXHRhdCBqYXZhLmlvLlJlYWRlci48aW5pdD4oUmVhZGVyLmphdmE6NzgpXG5cdGF0IGphdmEuaW8uSW5wdXRTdHJlYW1SZWFkZXIuPGluaXQ+KElucHV0U3RyZWFtUmVhZGVyLmphdmE6NzIpXG5cdGF0IGNvbS5naXRodWIubGF2ZXIuYWVzLnV0aWwuRmlsZVV0aWwucmVhZChGaWxlVXRpbC5qYXZhOjEwKVxuXHRhdCBjb20uZ2l0aHViLmxhdmVyLmFlcy5BRVNIZWFuZGxlLmhhbmRsZShBRVNIZWFuZGxlLmphdmE6NDYpXG5cdGF0IGNvbS5naXRodWIubGF2ZXIuYWVzLkFFU0hlYW5kbGUuaGFuZGxlKEFFU0hlYW5kbGUuamF2YTo2Nylcblx0YXQgY29tLmdpdGh1Yi5sYXZlci5jb3JlLnV0aWwuUmVzcG9uc2VVdGlsLnNlbmQoUmVzcG9uc2VVdGlsLmphdmE6NjgpXG5cdGF0IGNvbS5naXRodWIubGF2ZXIuY29yZS5maWx0ZXIuTGF2ZXJGaWx0ZXIuZG9GaWx0ZXIoTGF2ZXJGaWx0ZXIuamF2YTozMylcblx0YXQgb3JnLmFwYWNoZS5jYXRhbGluYS5jb3JlLkFwcGxpY2F0aW9uRmlsdGVyQ2hhaW4uaW50ZXJuYWxEb0ZpbHRlcihBcHBsaWNhdGlvbkZpbHRlckNoYWluLmphdmE6MTkyKVxuXHRhdCBvcmcuYXBhY2hlLmNhdGFsaW5hLmNvcmUuQXBwbGljYXRpb25GaWx0ZXJDaGFpbi5kb0ZpbHRlcihBcHBsaWNhdGlvbkZpbHRlckNoYWluLmphdmE6MTY1KVxuXHRhdCBvcmcuYXBhY2hlLmNhdGFsaW5hLmNvcmUuU3RhbmRhcmRXcmFwcGVyVmFsdmUuaW52b2tlKFN0YW5kYXJkV3JhcHBlclZhbHZlLmphdmE6MTk5KVxuXHRhdCBvcmcuYXBhY2hlLmNhdGFsaW5hLmNvcmUuU3RhbmRhcmRDb250ZXh0VmFsdmUuaW52b2tlKFN0YW5kYXJkQ29udGV4dFZhbHZlLmphdmE6MTA4KVxuXHRhdCBvcmcuYXBhY2hlLmNhdGFsaW5hLmF1dGhlbnRpY2F0b3IuQXV0aGVudGljYXRvckJhc2UuaW52b2tlKEF1dGhlbnRpY2F0b3JCYXNlLmphdmE6NTIyKVxuXHRhdCBvcmcuYXBhY2hlLmNhdGFsaW5hLmNvcmUuU3RhbmRhcmRIb3N0VmFsdmUuaW52b2tlKFN0YW5kYXJkSG9zdFZhbHZlLmphdmE6MTQwKVxuXHRhdCBvcmcuYXBhY2hlLmNhdGFsaW5hLnZhbHZlcy5FcnJvclJlcG9ydFZhbHZlLmludm9rZShFcnJvclJlcG9ydFZhbHZlLmphdmE6NzkpXG5cdGF0IG9yZy5hcGFjaGUuY2F0YWxpbmEudmFsdmVzLkFic3RyYWN0QWNjZXNzTG9nVmFsdmUuaW52b2tlKEFic3RyYWN0QWNjZXNzTG9nVmFsdmUuamF2YTo2MjApXG5cdGF0IG9yZy5hcGFjaGUuY2F0YWxpbmEuY29yZS5TdGFuZGFyZEVuZ2luZVZhbHZlLmludm9rZShTdGFuZGFyZEVuZ2luZVZhbHZlLmphdmE6ODcpXG5cdGF0IG9yZy5hcGFjaGUuY2F0YWxpbmEuY29ubmVjdG9yLkNveW90ZUFkYXB0ZXIuc2VydmljZShDb3lvdGVBZGFwdGVyLmphdmE6MzQzKVxuXHRhdCBvcmcuYXBhY2hlLmNveW90ZS5odHRwMTEuSHR0cDExUHJvY2Vzc29yLnNlcnZpY2UoSHR0cDExUHJvY2Vzc29yLmphdmE6MTA5Nilcblx0YXQgb3JnLmFwYWNoZS5jb3lvdGUuQWJzdHJhY3RQcm9jZXNzb3JMaWdodC5wcm9jZXNzKEFic3RyYWN0UHJvY2Vzc29yTGlnaHQuamF2YTo2Nilcblx0YXQgb3JnLmFwYWNoZS5jb3lvdGUuQWJzdHJhY3RQcm90b2NvbCRDb25uZWN0aW9uSGFuZGxlci5wcm9jZXNzKEFic3RyYWN0UHJvdG9jb2wuamF2YTo3NjApXG5cdGF0IG9yZy5hcGFjaGUudG9tY2F0LnV0aWwubmV0Lk5pb0VuZHBvaW50JFNvY2tldFByb2Nlc3Nvci5ydW4oTmlvRW5kcG9pbnQuamF2YToxNDgwKVxuXHRhdCBqYXZhLnV0aWwuY29uY3VycmVudC5UaHJlYWRQb29sRXhlY3V0b3IucnVuV29ya2VyKFRocmVhZFBvb2xFeGVjdXRvci5qYXZhOjExNDIpXG5cdGF0IGphdmEudXRpbC5jb25jdXJyZW50LlRocmVhZFBvb2xFeGVjdXRvciRXb3JrZXIucnVuKFRocmVhZFBvb2xFeGVjdXRvci5qYXZhOjYxNylcblx0YXQgb3JnLmFwYWNoZS50b21jYXQudXRpbC50aHJlYWRzLlRhc2tUaHJlYWQkV3JhcHBpbmdSdW5uYWJsZS5ydW4oVGFza1RocmVhZC5qYXZhOjYxKVxuXHRhdCBqYXZhLmxhbmcuVGhyZWFkLnJ1bihUaHJlYWQuamF2YTo3NDUpXG4iLCJzdGF0dXNDb2RlIjo1MDB9LCJodHRwQ29kZSI6NTAwLCJzdGF0dXMiOmZhbHNlfQ==";
        String password = "m4!23$#@0D#@12an";
        KeyGenerator kgen = KeyGenerator.getInstance("AES");
        kgen.init(128, new SecureRandom(password.getBytes()));
        SecretKey secretKey = kgen.generateKey();
//            byte[] enCodeFormat = secretKey.getEncoded();
//            SecretKeySpec key = new SecretKeySpec(enCodeFormat, "AES");
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.DECRYPT_MODE, secretKey);
        byte[] s = cipher.doFinal(new Base64().decode(m));
        System.out.println(new String(s));
    }
}
